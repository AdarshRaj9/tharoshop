{"ast":null,"code":"var _jsxFileName = \"/Users/aadarshraj/Development/Shopping/frontend/src/screens/ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { listProductDetails, updateProduct } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductEditScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const productId = match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    error,\n    loading,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== Number(productId)) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, product, productId, history, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault(); //update product\n\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      description\n    }));\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    formData.append('product_id', productId);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post(`/api/products/upload/`, formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      setUploading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"EDIT PRODUCT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 31\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 14\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"ENTER NAME\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"PRICE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"ENTER PRICE\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"IMAGE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"ENTER IMAGE\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            id: \"image-file\",\n            label: \"Choose file\",\n            custom: true,\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 9\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"BRAND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"ENTER BRAND\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countinstock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"STOCK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"ENTER STOCK\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"CATEGORY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"ENTER CATEGORY\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"DESCRIPTION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"ENTER DESCRIPTION\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"UPDATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductEditScreen, \"Efr7sI2pc2Y3Y3C/TGS2jS1OMfY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/Users/aadarshraj/Development/Shopping/frontend/src/screens/ProductEditScreen.js"],"names":["React","useEffect","useState","axios","Link","Form","Button","useDispatch","useSelector","Loader","Message","FormContainer","listProductDetails","updateProduct","PRODUCT_UPDATE_RESET","ProductEditScreen","match","history","productId","params","id","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","dispatch","productDetails","state","error","loading","product","productUpdate","errorUpdate","loadingUpdate","success","successUpdate","type","push","_id","Number","submitHandler","e","preventDefault","uploadFileHandler","file","target","files","formData","FormData","append","config","headers","data","post","value"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport  axios  from 'axios';\nimport { Link } from 'react-router-dom'\nimport {Form,Button} from 'react-bootstrap'\nimport { useDispatch,useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\n\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\n\n\nimport { listProductDetails,updateProduct} from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET} from '../constants/productConstants';\n\n\n\nexport default function ProductEditScreen({match,history}) {\n\n    const productId=match.params.id\n\n    const [name,setName]=useState('')\n    const [price,setPrice]=useState(0)\n    const [image,setImage]=useState('')\n    const [brand,setBrand]=useState('')\n    const [category,setCategory]=useState('')\n    const [countInStock,setCountInStock]=useState(0)\n    const[description,setDescription]=useState('')\n    const[uploading,setUploading]=useState(false)\n\n\n    \n    const dispatch = useDispatch()\n\n\n    const productDetails=useSelector(state=>state.productDetails)\n    const {error,loading,product}=productDetails\n\n    const productUpdate=useSelector(state=>state.productUpdate)\n    const {error:errorUpdate,loading:loadingUpdate,success:successUpdate}=productUpdate\n\n\n\n\n    useEffect(()=> {\n\n            if(successUpdate){\n                dispatch({type:PRODUCT_UPDATE_RESET})\n                history.push('/admin/productlist')\n            }\n            else\n            {\n        \n            if(!product.name || product._id !==Number(productId)){\n                dispatch(listProductDetails(productId))\n            }\n            else{\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n\n                \n            }\n        }\n\n\n        \n        \n    },[dispatch,product,productId,history,successUpdate])\n\n    const submitHandler=(e)=>{\n        e.preventDefault()\n        //update product\n        dispatch(updateProduct({\n            _id:productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            countInStock,\n            description,\n\n        }))\n    }\n\n    const uploadFileHandler=async(e)=>{\n        const file=e.target.files[0]\n        const formData=new FormData()\n\n        formData.append('image',file)\n        formData.append('product_id',productId)\n\n        setUploading(true)\n\n        try{\n            const config={\n                headers:{\n                    'Content-Type':'multipart/form-data'\n                }\n            }\n            const {data}=await axios.post(`/api/products/upload/`,formData,config)\n            setImage(data)\n            setUploading(false)\n\n\n        }catch (error) {\n            setUploading(false)\n\n\n        }\n\n    }\n\n    return (\n    <div>\n            <Link to='/admin/productlist'>Go Back</Link>\n\n            <FormContainer>\n\n            <h1>EDIT PRODUCT</h1>\n            {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n            \n    {loading?<Loader />:error?<Message variant='danger'>{error}</Message>:(\n\n<Form onSubmit={submitHandler}>\n<Form.Group controlId='name'>\n        <Form.Label>NAME</Form.Label>\n        <Form.Control \n            \n            type='name'\n            placeholder='ENTER NAME'\n            value={name}\n            onChange={(e)=>setName(e.target.value)}\n        >\n\n        </Form.Control>\n    </Form.Group>\n\n    <Form.Group controlId='price'>\n        <Form.Label>PRICE</Form.Label>\n        <Form.Control \n            \n            type='number'\n            placeholder='ENTER PRICE'\n            value={price}\n            onChange={(e)=>setPrice(e.target.value)}\n        >\n\n        </Form.Control>\n    </Form.Group>\n\n    <Form.Group controlId='image'>\n        <Form.Label>IMAGE</Form.Label>\n        <Form.Control \n            \n            type='text'\n            placeholder='ENTER IMAGE'\n            value={image}\n            onChange={(e)=>setImage(e.target.value)}\n        >\n\n        </Form.Control>\n        <Form.File\n            id='image-file'\n            label='Choose file'\n            custom\n            onChange={uploadFileHandler}\n        >\n\n        </Form.File>\n        {uploading && <Loader />}\n    </Form.Group>\n\n    <Form.Group controlId='brand'>\n        <Form.Label>BRAND</Form.Label>\n        <Form.Control \n            \n            type='text'\n            placeholder='ENTER BRAND'\n            value={brand}\n            onChange={(e)=>setBrand(e.target.value)}\n        >\n\n        </Form.Control>\n    </Form.Group>\n\n    <Form.Group controlId='countinstock'>\n        <Form.Label>STOCK</Form.Label>\n        <Form.Control \n            \n            type='number'\n            placeholder='ENTER STOCK'\n            value={countInStock}\n            onChange={(e)=>setCountInStock(e.target.value)}\n        >\n\n        </Form.Control>\n    </Form.Group>\n\n    <Form.Group controlId='category'>\n        <Form.Label>CATEGORY</Form.Label>\n        <Form.Control \n            \n            type='text'\n            placeholder='ENTER CATEGORY'\n            value={category}\n            onChange={(e)=>setCategory(e.target.value)}\n        >\n\n        </Form.Control>\n    </Form.Group>\n\n    <Form.Group controlId='description'>\n        <Form.Label>DESCRIPTION</Form.Label>\n        <Form.Control \n            \n            type='text'\n            placeholder='ENTER DESCRIPTION'\n            value={description}\n            onChange={(e)=>setDescription(e.target.value)}\n        >\n\n        </Form.Control>\n    </Form.Group>\n\n\n\n\n\n\n\n    \n    \n    <Button \n        type=\"submit\"\n        variant=\"primary\"\n    >\n        UPDATE\n\n    </Button>\n\n</Form>\n\n    )}\n\n            \n    </FormContainer>\n\n            \n\n    </div>\n    )\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}