{"ast":null,"code":"var _jsxFileName = \"/Users/aadarshraj/Development/Shopping/frontend/src/screens/UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails } from '../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const userId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    error,\n    loading,\n    user\n  } = userDetails;\n  useEffect(() => {\n    if (!user.name || user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setIsAdmin(user.isAdmin);\n    }\n  }, [user, userId]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"EDIT USER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"ENTER NAME\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"EMAIL ADDRESS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"ENTER EMAIL\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Is Admin\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"UPDATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditScreen, \"mMTm4x02DOEjGVBnp8xy4F6OwFo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = EditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditScreen\");","map":{"version":3,"sources":["/Users/aadarshraj/Development/Shopping/frontend/src/screens/UserEditScreen.js"],"names":["React","useEffect","useState","Link","Form","Button","useDispatch","useSelector","Loader","Message","FormContainer","getUserDetails","EditScreen","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","error","loading","user","_id","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport {Form,Button} from 'react-bootstrap'\nimport { useDispatch,useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\n\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\n\n\nimport { getUserDetails } from '../actions/userActions'\n\n\n\nexport default function EditScreen({match,history}) {\n\n    const userId=match.params.id\n\n    const [name,setName]=useState('')\n    const [email, setEmail]=useState('')\n    const [isAdmin,setIsAdmin]=useState(false)\n\n    const dispatch = useDispatch()\n\n\n    const userDetails=useSelector(state=>state.userDetails)\n    const {error,loading,user}=userDetails\n\n    useEffect(()=> {\n        if(!user.name || user._id !==userId){\n            dispatch(getUserDetails(userId))\n        }\n        else{\n            setName(user.name)\n            setEmail(user.email)\n            setIsAdmin(user.isAdmin)\n        }\n        \n    },[user,userId])\n\n    const submitHandler=(e)=>{\n        e.preventDefault()\n        \n    }\n\n    return (\n    <div>\n            <Link to='/admin/userlist'>Go Back</Link>\n\n            <FormContainer>\n\n            <h1>EDIT USER</h1>\n    {loading?<Loader />:error?<Message variant='danger'>{error}</Message>:(\n\n<Form onSubmit={submitHandler}>\n<Form.Group controlId='name'>\n        <Form.Label>NAME</Form.Label>\n        <Form.Control \n            \n            type='name'\n            placeholder='ENTER NAME'\n            value={name}\n            onChange={(e)=>setName(e.target.value)}\n        >\n\n        </Form.Control>\n    </Form.Group>\n\n    <Form.Group controlId='email'>\n        <Form.Label>EMAIL ADDRESS</Form.Label>\n        <Form.Control \n            type='email'\n            placeholder='ENTER EMAIL'\n            value={email}\n            onChange={(e)=>setEmail(e.target.value)}\n        >\n\n        </Form.Control>\n    </Form.Group>\n\n    <Form.Group controlId='password'>\n        <Form.Check\n            \n            type='checkbox'\n            label='Is Admin'\n            checked={isAdmin}\n            onChange={(e)=>setIsAdmin(e.target.checked)}\n        >\n\n        </Form.Check>\n    </Form.Group>\n    <Button \n        type=\"submit\"\n        variant=\"primary\"\n    >\n        UPDATE\n\n    </Button>\n\n</Form>\n\n    )}\n\n            \n    </FormContainer>\n\n            \n\n    </div>\n    )\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}