{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/aadarshraj/Development/Shopping/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter"],"mappings":"AAAA,SAASA,aAAT,EAAuBC,gBAAvB,QAA+C,4BAA/C;AAEA,OAAO,MAAMC,WAAW,GAAC,CAACC,KAAK,GAAC;AAACC,EAAAA,SAAS,EAAC;AAAX,CAAP,EAAsBC,MAAtB,KAA+B;AACpD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,aAAL;AACI,YAAMO,IAAI,GAACF,MAAM,CAACG,OAAlB;AACA,YAAMC,SAAS,GAACN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAEA,CAAC,CAACC,OAAF,KAAYL,IAAI,CAACK,OAAzC,CAAhB;;AACA,UAAGH,SAAH,EACA;AACI,eAAM,EACF,GAAGN,KADD;AAEFC,UAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAC3BA,CAAC,CAACC,OAAF,KAAYH,SAAS,CAACG,OAAtB,GAA8BL,IAA9B,GAAmCI,CAD7B;AAFR,SAAN;AAMH,OARD,MAQK;AACD,eAAO,EACH,GAAGR,KADA;AAEHC,UAAAA,SAAS,EAAC,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAoBG,IAApB;AAFP,SAAP;AAIH;;AACL,SAAKN,gBAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHC,QAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAuBH,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAYP,MAAM,CAACG,OAA/C;AAFP,OAAP;;AAIJ;AACI,aAAOL,KAAP;AAxBR;AA0BH,CA3BM","sourcesContent":["import { CART_ADD_ITEM,CART_REMOVE_ITEM } from '../constants/cartConstants'\n\nexport const cartReducer=(state={cartItems:[]},action)=>{\n    switch(action.type){\n        case CART_ADD_ITEM:\n            const item=action.payload\n            const existItem=state.cartItems.find(x=>x.product===item.product)\n            if(existItem)\n            {\n                return{\n                    ...state,\n                    cartItems:state.cartItems.map(x=>\n                        x.product===existItem.product?item:x\n                        )\n                }\n            }else{\n                return {\n                    ...state,\n                    cartItems:[...state.cartItems,item]\n                }\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems:state.cartItems.filter(x => x.product!==action.payload)\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}