{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET } from '../constants/userConstants';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}/`, // {\n    //     'name':name,'email': email,'password': password\n    // },\n    config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    }); // dispatch({\n    //     type: USER_LOGIN_SUCCESS,\n    //     payload:data\n    // })\n    // localStorage.setItem('userInfo',JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile/update/`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/user/`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/aadarshraj/Development/Shopping/frontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n\n\n\n    \n    \n\n\n } from '../constants/userConstants'\n\n import { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\n\nexport const login =(email, password)=>async(dispatch)=>{\n    try {\n        dispatch({\n            type:USER_LOGIN_REQUEST,\n\n        })\n\n        const config ={\n            headers:{\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const {data}=await axios.post(\n            '/api/users/login/',\n            {\n                'username': email,'password': password\n            },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload:data\n        })\n        localStorage.setItem('userInfo',JSON.stringify(data))\n        \n    } catch (error) {\n        dispatch(  {\n            type:USER_LOGIN_FAIL,\n            payload:error.response && error.response.data.detail?\n            error.response.data.detail:error.message,\n        })\n        \n    }\n}\n\n\nexport const logout = () => (dispatch)=>{\n    localStorage.removeItem('userInfo')\n    dispatch( {\n        type:USER_LOGOUT\n\n    })\n\n    dispatch( {\n        type:USER_DETAILS_RESET\n\n    })\n    dispatch( {\n        type:ORDER_LIST_MY_RESET\n\n    })\n    dispatch( {\n        type:USER_LIST_RESET\n\n    })\n\n}\n\n\n\nexport const register =(name,email, password)=>async(dispatch)=>{\n    try {\n        dispatch({\n            type:USER_REGISTER_REQUEST,\n\n        })\n\n        const config ={\n            headers:{\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const {data}=await axios.post(\n            '/api/users/register/',\n            {\n                'name':name,'email': email,'password': password\n            },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload:data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo',JSON.stringify(data))\n        \n    } catch (error) {\n        dispatch(  {\n            type:USER_REGISTER_FAIL,\n            payload:error.response && error.response.data.detail?\n            error.response.data.detail:error.message,\n        })\n        \n    }\n}\n\n\nexport const getUserDetails =(id)=>async(dispatch,getState)=>{\n    try {\n        dispatch({\n            type:USER_DETAILS_REQUEST\n\n        })\n\n        const { \n            userLogin:{ userInfo }, \n        } = getState()\n\n        const config ={\n            headers:{\n                'Content-Type': 'application/json',\n                Authorization:`Bearer ${userInfo.token}`\n            }\n        }  \n\n        const {data}=await axios.get(\n            `/api/users/${id}/`,\n            // {\n            //     'name':name,'email': email,'password': password\n            // },\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload:data\n        })\n\n        // dispatch({\n        //     type: USER_LOGIN_SUCCESS,\n        //     payload:data\n        // })\n\n       // localStorage.setItem('userInfo',JSON.stringify(data))\n        \n    } catch (error) {\n        dispatch(  {\n            type:USER_DETAILS_FAIL,\n            payload:error.response && error.response.data.detail?\n            error.response.data.detail:error.message,\n        })\n        \n    }\n}\n\n\nexport const updateUserProfile =(user)=>async(dispatch,getState)=>{\n    try {\n        dispatch({\n            type:USER_UPDATE_PROFILE_REQUEST,\n\n        })\n\n        const { \n            userLogin:{userInfo, }\n         } = getState()\n\n        const config ={\n            headers:{\n                'Content-Type': 'application/json',\n                Authorization:`Bearer ${userInfo.token}`\n            }\n        }  \n\n        const {data}=await axios.put(\n            `/api/users/profile/update/`,\n            \n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload:data\n        })\n\n        \n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo',JSON.stringify(data))\n        \n    } catch (error) {\n        dispatch(  {\n            type:USER_UPDATE_PROFILE_FAIL,\n            payload:error.response && error.response.data.detail?\n            error.response.data.detail:error.message,\n        })\n        \n    }\n}\n\n\nexport const listUsers =()=>async(dispatch,getState)=>{\n    try {\n        dispatch({\n            type:USER_LIST_REQUEST,\n\n        })\n\n        const { \n            userLogin:{userInfo }\n         } = getState()\n\n        const config ={\n            headers:{\n                'Content-Type': 'application/json',\n                Authorization:`Bearer ${userInfo.token}`\n            }\n        }  \n\n        const {data}=await axios.get(\n            `/api/user/`,\n            \n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload:data\n        })\n\n        \n    } catch (error) {\n        dispatch(  {\n            type:USER_LIST_FAIL,\n            payload:error.response && error.response.data.detail?\n            error.response.data.detail:error.message,\n        })\n        \n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}