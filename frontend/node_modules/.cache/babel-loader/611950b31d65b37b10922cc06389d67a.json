{"ast":null,"code":"var _jsxFileName = \"/Users/aadarshraj/Development/Shopping/frontend/src/screens/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport { listMyOrders } from '../actions/orderActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileScreen({\n  history\n}) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setconfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    error,\n    loading,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = orderListMy;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails('profile'));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({\n        'id': user._id,\n        'name': name,\n        'email': email,\n        'password': password\n      }));\n      setMessage('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"USER PROFILE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 23\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"name\",\n            placeholder: \"ENTER NAME\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"EMAIL ADDRESS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"email\",\n            placeholder: \"ENTER EMAIL\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"PASSWORD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"ENTER PASSWORD\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"passwordConfirm\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"CONFIRM PASSWORD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"CONFIRM PASSWORD\",\n            value: confirmPassword,\n            onChange: e => setconfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"UPDATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"MY ORDERS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), loadingOrders ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this) : errorOrders ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        responsive: true,\n        className: \"table-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TOTAL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"PAID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DELIVERED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.createdAt.substring((0, 10))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", order.totalPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-time\",\n                style: {\n                  color: 'red'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/order/${order._id}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-sm\",\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 41\n            }, this)]\n          }, order._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileScreen, \"DLotbqQGrymzuf0kAaPw3T8uDt0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/Users/aadarshraj/Development/Shopping/frontend/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","Link","Form","Button","Row","Col","Table","LinkContainer","useDispatch","useSelector","Loader","Message","FormContainer","getUserDetails","updateUserProfile","USER_UPDATE_PROFILE_RESET","listMyOrders","ProfileScreen","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setconfirmPassword","message","setMessage","dispatch","userDetails","state","error","loading","user","userLogin","userInfo","userUpdateProfile","success","orderListMy","loadingOrders","errorOrders","orders","push","type","submitHandler","e","preventDefault","_id","target","value","map","order","createdAt","substring","totalPrice","isPaid","paidAt","color"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport {Form,Button,Row,Col,Table} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch,useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\n\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\n\n\nimport { getUserDetails,updateUserProfile} from '../actions/userActions'\n\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\n\nimport { listMyOrders } from '../actions/orderActions'\n\n\n\n\nfunction ProfileScreen({history}) {\n\n    const [name,setName]=useState('')\n    const [email, setEmail]=useState('')\n    const [password, setPassword]=useState('')\n    const [confirmPassword,setconfirmPassword]=useState('')\n    const [message,setMessage]=useState('')\n\n    const dispatch = useDispatch()\n\n\n    const userDetails=useSelector(state=>state.userDetails)\n    const {error,loading,user}=userDetails\n\n\n    const userLogin=useSelector(state=>state.userLogin)\n    const {userInfo}=userLogin \n\n\n    const userUpdateProfile=useSelector(state=>state.userUpdateProfile)\n    const {success}=userUpdateProfile \n\n    const orderListMy=useSelector(state=>state.orderListMy)\n    const {loading:loadingOrders,error:errorOrders,orders}=orderListMy \n\n\n\n    useEffect(()=> {\n        if(!userInfo)\n        { \n            history.push('/login')\n        }\n        else\n        {\n            if(!user || !user.name || success)\n            {\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            }\n            else\n            { \n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    },[dispatch,history,userInfo,user,success])\n\n    const submitHandler=(e)=>{\n        e.preventDefault()\n        if(password!==confirmPassword)\n        {\n            setMessage('Passwords do not match')\n        }\n        else\n        {   \n            dispatch(updateUserProfile({\n                'id':user._id,\n                'name':name,\n                'email':email,\n                'password': password\n        }))\n        setMessage('')\n\n        }\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>USER PROFILE</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n                    <Form.Label>NAME</Form.Label>\n                    <Form.Control \n                        required\n                        type='name'\n                        placeholder='ENTER NAME'\n                        value={name}\n                        onChange={(e)=>setName(e.target.value)}\n                    >\n\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>EMAIL ADDRESS</Form.Label>\n                    <Form.Control \n                        required\n                        type='email'\n                        placeholder='ENTER EMAIL'\n                        value={email}\n                        onChange={(e)=>setEmail(e.target.value)}\n                    >\n\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>PASSWORD</Form.Label>\n                    <Form.Control \n                        \n                        type='password'\n                        placeholder='ENTER PASSWORD'\n                        value={password}\n                        onChange={(e)=>setPassword(e.target.value)}\n                    >\n\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>CONFIRM PASSWORD</Form.Label>\n                    <Form.Control \n                        type='password'\n                        placeholder='CONFIRM PASSWORD'\n                        value={confirmPassword}\n                        onChange={(e)=>setconfirmPassword(e.target.value)}\n                    >\n\n                    </Form.Control>\n                </Form.Group>\n                <Button \n                    type=\"submit\"\n                    variant=\"primary\"\n                >\n                    UPDATE\n\n                </Button>\n\n            </Form>\n\n            </Col>\n            <Col md={9}>\n                <h2>MY ORDERS</h2>\n                {loadingOrders?(\n                    <Loader />\n                ):errorOrders?(\n                <Message variant=\"danger\">{errorOrders}</Message>\n                ):(\n                    <Table striped responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>DATE</th>\n                                <th>TOTAL</th>\n                                <th>PAID</th>\n                                <th>DELIVERED</th>\n                                <th></th>\n                                \n\n                            </tr>\n                            </thead>\n                            <tbody>\n                                {orders.map(order=>(\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.createdAt.substring((0,10))}</td>\n                                        <td>${order.totalPrice}</td>\n                                        <td>{order.isPaid ? order.paidAt.substring(0,10) :(\n                                            <i className='fas fa-time' style={{  color:'red'}}></i>\n                                        )}</td>\n                                        <td>\n                                            <Link to={`/order/${order._id}`}>\n                                                <Button className='btn-sm'>Details</Button>\n                                            </Link>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n\n                    </Table>\n                )}\n            </Col>\n            \n        </Row>\n    )\n}\n\nexport default ProfileScreen\n"]},"metadata":{},"sourceType":"module"}